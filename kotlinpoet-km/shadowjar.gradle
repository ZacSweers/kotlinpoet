/*
 * Copyright (C) 2019 Square, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Extracted to a separate file because it relies on groovy swizzling that isn't possible in Kotlin-DSL
apply plugin: "com.github.johnrengelman.shadow"

String kotlinxMetadata = "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.1.0"

configurations.runtimeOnly.artifacts.removeAll { it.archiveTask.is jar }
tasks.getByName('jar').enabled = false
// create extra configuration for shaded dependencies, so they're not included in the pom
def shadedConfig = configurations.create('implementationShaded')
configurations.compileOnly.extendsFrom(shadedConfig)
shadowJar {
  minimize {
    // Otherwise it strips the JvmMetadataExtensions impl that's loaded via ServiceLoader
    exclude(dependency(kotlinxMetadata))
  }
  archiveClassifier.set('')
  configurations = [shadedConfig]
  relocate 'com.google', 'com.squareup.kotlinpoet.km.shaded.com.google'
  relocate 'afu', 'com.squareup.kotlinpoet.km.shaded.afu'
  relocate 'org', 'com.squareup.kotlinpoet.km.shaded.org'
  relocate 'kotlinx.metadata', 'com.squareup.kotlinpoet.km.shaded.kotlinx.metadata'
  exclude 'javax/**'

  // Service files are not included by default.
  mergeServiceFiles {
    include 'META-INF/services/kotlinx.metadata.*'
  }
}
artifacts {
  runtime shadowJar
  archives shadowJar
}

dependencies {
  implementationShaded "com.google.auto:auto-common:0.10"
  implementationShaded(kotlinxMetadata) {
    transitive = false
  }
}
